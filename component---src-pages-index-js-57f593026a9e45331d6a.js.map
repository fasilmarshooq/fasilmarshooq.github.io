{"version":3,"file":"component---src-pages-index-js-57f593026a9e45331d6a.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/images/dp.jpeg","webpack://gatsby-starter-default/./src/components/Bio/styles.jsx","webpack://gatsby-starter-default/./node_modules/react-loading-skeleton/dist/index.js","webpack://gatsby-starter-default/./src/components/Bio/bio.jsx","webpack://gatsby-starter-default/./src/components/blog-layout.jsx","webpack://gatsby-starter-default/./src/components/HomeLayout/home-layout.jsx","webpack://gatsby-starter-default/./src/pages/index.js","webpack://gatsby-starter-default/./src/components/styles/blog.module.css"],"sourcesContent":["/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","export default __webpack_public_path__ + \"static/dp-6a584bfccd958035afc51b33af6610ac.jpeg\";","import styled from \"styled-components\"\r\n\r\nexport const DisplayPic = styled.img`\r\n  border-radius: 50%;\r\n  max-width: 100px;\r\n  max-height: 100px;\r\n  @media (max-width: 350px) {\r\n    max-width: 50px;\r\n    max-height: 50px;\r\n  }\r\n`\r\n\r\nexport const StyledBio = styled.section`\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  margin-left: 2rem;\r\n  @media (max-width: 550px) {\r\n    align-items: flex-start;\r\n  }\r\n  @media (max-width: 550px) {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n`\r\nexport const StyledTexts = styled.div`\r\n  line-height: 1.2rem;\r\n  font-weight: 300;\r\n  margin-left: 2rem;\r\n  a {\r\n    color: cyan;\r\n    border-bottom: 1px solid cyan;\r\n  }\r\n\r\n  p {\r\n    margin-bottom: 1rem;\r\n  }\r\n  @media (max-width: 550px) {\r\n    margin-left: 1rem;\r\n  }\r\n`\r\n\r\nexport const StyledSocials = styled.div`\r\n  margin-top: 1rem;\r\n  margin-left: 2rem;\r\n  a {\r\n    margin: 0 0.5rem 0 0;\r\n    display: inline-block;\r\n    padding: 0;\r\n    width: 25px;\r\n    line-height: 0;\r\n  }\r\n\r\n  img {\r\n    filter: invert() !important;\r\n    width: 100%;\r\n    height: 100%;\r\n    transition: all 0.2s ease-in-out;\r\n  }\r\n\r\n  img:hover {\r\n    transform: scale(1.2);\r\n  }\r\n  @media (max-width: 550px) {\r\n    margin-left: 1rem;\r\n  }\r\n`\r\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n","import React from \"react\"\r\nimport dp from \"../../images/dp.jpeg\"\r\nimport { StyledBio, DisplayPic, StyledTexts, StyledSocials } from \"./styles\"\r\nimport Skeleton from \"react-loading-skeleton\"\r\n\r\nconst socials = {\r\n  github: {\r\n    title: \"github\",\r\n    username: `fasilmarshooq`,\r\n    url: `https://github.com/`,\r\n  },\r\n  linkedin: {\r\n    title: \"linkedin\",\r\n    username: `srsmaurya`,\r\n    url: `https://linkedin.com/in/`,\r\n  },\r\n  email: {\r\n    title: \"email\",\r\n    username: `fasilmarshooq@gmail.com`,\r\n    url: `mailto:`,\r\n  },\r\n}\r\n\r\nexport const Bio = () => {\r\n  const [isLoading, setIsLoading] = React.useState(true)\r\n\r\n  // React.useEffect(() => {\r\n  //   const image = new Image()\r\n  //   image.src = dp\r\n  //   image.onload = () => {\r\n  //     setIsLoading(false)\r\n  //   }\r\n  // }, [])\r\n\r\n  return (\r\n    <StyledBio>\r\n      {/* {isLoading ? (\r\n        // Show skeleton or loading state\r\n        <DisplayPicSkeleton />\r\n      ) : (\r\n        // Show the image once it's loaded\r\n        <DisplayPic src={dp} alt=\"DP\" />\r\n      )} */}\r\n\r\n      {<DisplayPic src={dp} alt=\"DP\" /> || (\r\n        <Skeleton circle={true} height={100} width={100} />\r\n      )}\r\n\r\n      <section style={{ marginLeft: \"1rem\" }}>\r\n        <StyledTexts>\r\n          <p>I talk about Dotnet, Sql and others</p>\r\n          <p>\r\n            You can follow me on{\" \"}\r\n            <a href=\"https://www.linkedin.com/in/fasilmarshooq/\">LinkedIn</a>\r\n          </p>\r\n        </StyledTexts>\r\n        <StyledSocials>\r\n          {Object.keys(socials).map((social_id, i) => (\r\n            <a\r\n              href={socials[social_id].url + socials[social_id].username}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              key={i}\r\n            >\r\n              <img\r\n                src={`/icons/${socials[social_id].title}.png`}\r\n                alt={socials[social_id].title}\r\n              />\r\n            </a>\r\n          ))}\r\n        </StyledSocials>\r\n      </section>\r\n    </StyledBio>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\r\nimport * as blogStyles from \"./styles/blog.module.css\"\r\nimport * as postStyles from \"./styles/post.module.css\"\r\n// import \"gatsby-prismjs-dracula\"\r\nimport Seo from \"./seo\"\r\n\r\nconst PostListLayout = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query GetAllPosts {\r\n      allMdx {\r\n        nodes {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            tags\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n          body\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  const nodes = data?.allMdx?.nodes\r\n  return (\r\n    <section className={blogStyles.articles}>\r\n      {nodes.map(post => {\r\n        const title = post.frontmatter.title || post.fields.slug\r\n        const date = post.frontmatter.date\r\n        return (\r\n          <article className={blogStyles.article} key={post.fields.slug}>\r\n            <h2 className={blogStyles.articleTitle}>\r\n              <Link to={post.fields.slug} itemProp=\"url\">\r\n                {title}\r\n              </Link>\r\n            </h2>\r\n            <small className={blogStyles.date}>{date}</small>\r\n            <div className={blogStyles.tags}>\r\n              {post.frontmatter.tags.map((tag, i) => (\r\n                <Link key={i} to={`tags/${tag}`} className={blogStyles.tag}>\r\n                  {tag}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </article>\r\n        )\r\n      })}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PostListLayout\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Seo from \"../seo\"\r\nimport { Bio } from \"../Bio/bio\"\r\nimport PostListLayout from \"../blog-layout\"\r\nimport styled from \"styled-components\"\r\n\r\nconst StyledHeader = styled.header`\r\n  padding: 2rem 0 4rem 0;\r\n  font-size: 3rem;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 0 0 2rem 0;\r\n    font-size: 2.5rem;\r\n  }\r\n\r\n  @media (max-width: 550px) {\r\n    padding: 0 0 2rem 0;\r\n    font-size: 2rem;\r\n  }\r\n\r\n  @media (max-width: 350px) {\r\n    padding: 0 0 2rem 0;\r\n    font-size: 1.2rem;\r\n  }\r\n`\r\n\r\nconst SiteTitle = styled.h1`\r\n  font-size: 2.5rem;\r\n  font-weight: bolder;\r\n  line-height: 110%;\r\n  color: var(--white-1);\r\n`\r\n\r\nexport const HomeLayout = () => {\r\n  return (\r\n    <main>\r\n      <Seo title=\"Home\" />\r\n      <StyledHeader>\r\n        <Link to=\"/\">\r\n          <SiteTitle>Fasil Marshooq</SiteTitle>\r\n        </Link>\r\n      </StyledHeader>\r\n      <Bio />\r\n      <PostListLayout />\r\n    </main>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\n\r\nimport Seo from \"../components/seo\"\r\nimport { HomeLayout } from \"../components/HomeLayout/home-layout\"\r\n\r\nconst IndexPage = () => <HomeLayout />\r\n\r\nexport const Head = () => <Seo title=\"Home\" />\r\n\r\nexport default IndexPage\r\n","// extracted by mini-css-extract-plugin\nexport var article = \"blog-module--article--74ac1\";\nexport var articleTitle = \"blog-module--article-title--70ded\";\nexport var articles = \"blog-module--articles--c2662\";\nexport var date = \"blog-module--date--9de28\";\nexport var tag = \"blog-module--tag--559c5\";\nexport var tags = \"blog-module--tags--7ea75\";"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","author","DisplayPic","styled","img","withConfig","displayName","componentId","StyledBio","section","StyledTexts","div","StyledSocials","SkeletonThemeContext","defaultEnableAnimation","styleOptionsToCssProperties","baseColor","highlightColor","width","height","borderRadius","circle","direction","duration","enableAnimation","style","Skeleton","count","wrapper","Wrapper","className","customClassName","containerClassName","containerTestId","styleProp","originalPropsStyleOptions","_a","_b","_c","contextStyleOptions","propsStyleOptions","key","value","Object","entries","styleOptions","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","map","el","socials","github","username","url","linkedin","email","Bio","isLoading","setIsLoading","src","dp","alt","marginLeft","href","keys","social_id","target","rel","PostListLayout","_data$allMdx","data","nodes","allMdx","blogStyles","post","frontmatter","fields","slug","date","Link","to","itemProp","tags","tag","StyledHeader","header","SiteTitle","h1","HomeLayout","Seo","Head","IndexPage","article","articleTitle","articles"],"sourceRoot":""}